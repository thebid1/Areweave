/**
 * Copyright (C) 2022-2024 Permanent Data Solutions, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { AxiosInstance } from 'axios';
import { IAxiosRetryConfig } from 'axios-retry';
import { Buffer } from 'node:buffer';
import { Readable } from 'stream';
import { ReadableStream } from 'stream/web';
import { TurboHTTPServiceInterface, TurboLogger, TurboSignedRequestHeaders } from '../types.js';
export declare class TurboHTTPService implements TurboHTTPServiceInterface {
    protected axios: AxiosInstance;
    protected logger: TurboLogger;
    constructor({ url, retryConfig, logger, }: {
        url: string;
        retryConfig?: IAxiosRetryConfig;
        logger: TurboLogger;
    });
    get<T>({ endpoint, signal, allowedStatuses, headers, }: {
        endpoint: string;
        signal?: AbortSignal;
        allowedStatuses?: number[];
        headers?: Partial<TurboSignedRequestHeaders> & Record<string, string>;
    }): Promise<T>;
    post<T>({ endpoint, signal, allowedStatuses, headers, data, }: {
        endpoint: string;
        signal?: AbortSignal;
        allowedStatuses?: number[];
        headers?: Partial<TurboSignedRequestHeaders> & Record<string, string>;
        data: Readable | Buffer | ReadableStream;
    }): Promise<T>;
}
//# sourceMappingURL=http.d.ts.map