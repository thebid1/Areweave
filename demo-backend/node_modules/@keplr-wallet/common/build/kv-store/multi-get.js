"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WrapMultiGetKVStore = void 0;
class WrapMultiGetKVStore {
    constructor(kvStore) {
        this.kvStore = kvStore;
    }
    multiGet(keys) {
        return __awaiter(this, void 0, void 0, function* () {
            // Remove duplications
            keys = Array.from(new Set(keys));
            const res = {};
            const promises = [];
            for (const key of keys) {
                promises.push((() => __awaiter(this, void 0, void 0, function* () {
                    res[key] = yield this.kvStore.get(key);
                }))());
            }
            yield Promise.all(promises);
            return res;
        });
    }
}
exports.WrapMultiGetKVStore = WrapMultiGetKVStore;
//# sourceMappingURL=multi-get.js.map