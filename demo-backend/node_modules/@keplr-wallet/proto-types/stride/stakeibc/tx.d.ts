import _m0 from "protobufjs/minimal";
import { ICAAccountType } from "../../stride/stakeibc/ica_account";
import { Validator } from "../../stride/stakeibc/validator";
export declare const protobufPackage = "stride.stakeibc";
export interface MsgUpdateInnerRedemptionRateBounds {
    creator: string;
    chainId: string;
    minInnerRedemptionRate: string;
    maxInnerRedemptionRate: string;
}
export interface MsgUpdateInnerRedemptionRateBoundsResponse {
}
export interface MsgLiquidStake {
    creator: string;
    amount: string;
    hostDenom: string;
}
export interface MsgLiquidStakeResponse {
}
export interface MsgLSMLiquidStake {
    creator: string;
    amount: string;
    lsmTokenIbcDenom: string;
}
export interface MsgLSMLiquidStakeResponse {
    transactionComplete: boolean;
}
export interface MsgClearBalance {
    creator: string;
    chainId: string;
    amount: string;
    channel: string;
}
export interface MsgClearBalanceResponse {
}
export interface MsgRedeemStake {
    creator: string;
    amount: string;
    hostZone: string;
    receiver: string;
}
export interface MsgRedeemStakeResponse {
}
/** next: 15 */
export interface MsgRegisterHostZone {
    connectionId: string;
    bech32prefix: string;
    hostDenom: string;
    ibcDenom: string;
    creator: string;
    transferChannelId: string;
    unbondingPeriod: string;
    minRedemptionRate: string;
    maxRedemptionRate: string;
    lsmLiquidStakeEnabled: boolean;
}
export interface MsgRegisterHostZoneResponse {
}
export interface MsgClaimUndelegatedTokens {
    creator: string;
    /** UserUnbondingRecords are keyed on {chain_id}.{epoch}.{sender} */
    hostZoneId: string;
    epoch: string;
    sender: string;
}
export interface MsgClaimUndelegatedTokensResponse {
}
export interface MsgRebalanceValidators {
    creator: string;
    hostZone: string;
    numRebalance: string;
}
export interface MsgRebalanceValidatorsResponse {
}
export interface MsgAddValidators {
    creator: string;
    hostZone: string;
    validators: Validator[];
}
export interface MsgAddValidatorsResponse {
}
export interface MsgChangeValidatorWeight {
    creator: string;
    hostZone: string;
    valAddr: string;
    weight: string;
}
export interface MsgChangeValidatorWeightResponse {
}
export interface MsgDeleteValidator {
    creator: string;
    hostZone: string;
    valAddr: string;
}
export interface MsgDeleteValidatorResponse {
}
export interface MsgRestoreInterchainAccount {
    creator: string;
    chainId: string;
    accountType: ICAAccountType;
}
export interface MsgRestoreInterchainAccountResponse {
}
export interface MsgUpdateValidatorSharesExchRate {
    creator: string;
    chainId: string;
    valoper: string;
}
export interface MsgUpdateValidatorSharesExchRateResponse {
}
export interface MsgUndelegateHost {
    creator: string;
    amount: string;
}
export interface MsgUndelegateHostResponse {
}
export interface MsgCalibrateDelegation {
    creator: string;
    chainId: string;
    valoper: string;
}
export interface MsgCalibrateDelegationResponse {
}
export declare const MsgUpdateInnerRedemptionRateBounds: {
    encode(message: MsgUpdateInnerRedemptionRateBounds, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgUpdateInnerRedemptionRateBounds;
    fromJSON(object: any): MsgUpdateInnerRedemptionRateBounds;
    toJSON(message: MsgUpdateInnerRedemptionRateBounds): unknown;
    fromPartial<I extends {
        creator?: string | undefined;
        chainId?: string | undefined;
        minInnerRedemptionRate?: string | undefined;
        maxInnerRedemptionRate?: string | undefined;
    } & {
        creator?: string | undefined;
        chainId?: string | undefined;
        minInnerRedemptionRate?: string | undefined;
        maxInnerRedemptionRate?: string | undefined;
    } & Record<Exclude<keyof I, keyof MsgUpdateInnerRedemptionRateBounds>, never>>(object: I): MsgUpdateInnerRedemptionRateBounds;
};
export declare const MsgUpdateInnerRedemptionRateBoundsResponse: {
    encode(_: MsgUpdateInnerRedemptionRateBoundsResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgUpdateInnerRedemptionRateBoundsResponse;
    fromJSON(_: any): MsgUpdateInnerRedemptionRateBoundsResponse;
    toJSON(_: MsgUpdateInnerRedemptionRateBoundsResponse): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): MsgUpdateInnerRedemptionRateBoundsResponse;
};
export declare const MsgLiquidStake: {
    encode(message: MsgLiquidStake, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgLiquidStake;
    fromJSON(object: any): MsgLiquidStake;
    toJSON(message: MsgLiquidStake): unknown;
    fromPartial<I extends {
        creator?: string | undefined;
        amount?: string | undefined;
        hostDenom?: string | undefined;
    } & {
        creator?: string | undefined;
        amount?: string | undefined;
        hostDenom?: string | undefined;
    } & Record<Exclude<keyof I, keyof MsgLiquidStake>, never>>(object: I): MsgLiquidStake;
};
export declare const MsgLiquidStakeResponse: {
    encode(_: MsgLiquidStakeResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgLiquidStakeResponse;
    fromJSON(_: any): MsgLiquidStakeResponse;
    toJSON(_: MsgLiquidStakeResponse): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): MsgLiquidStakeResponse;
};
export declare const MsgLSMLiquidStake: {
    encode(message: MsgLSMLiquidStake, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgLSMLiquidStake;
    fromJSON(object: any): MsgLSMLiquidStake;
    toJSON(message: MsgLSMLiquidStake): unknown;
    fromPartial<I extends {
        creator?: string | undefined;
        amount?: string | undefined;
        lsmTokenIbcDenom?: string | undefined;
    } & {
        creator?: string | undefined;
        amount?: string | undefined;
        lsmTokenIbcDenom?: string | undefined;
    } & Record<Exclude<keyof I, keyof MsgLSMLiquidStake>, never>>(object: I): MsgLSMLiquidStake;
};
export declare const MsgLSMLiquidStakeResponse: {
    encode(message: MsgLSMLiquidStakeResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgLSMLiquidStakeResponse;
    fromJSON(object: any): MsgLSMLiquidStakeResponse;
    toJSON(message: MsgLSMLiquidStakeResponse): unknown;
    fromPartial<I extends {
        transactionComplete?: boolean | undefined;
    } & {
        transactionComplete?: boolean | undefined;
    } & Record<Exclude<keyof I, "transactionComplete">, never>>(object: I): MsgLSMLiquidStakeResponse;
};
export declare const MsgClearBalance: {
    encode(message: MsgClearBalance, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgClearBalance;
    fromJSON(object: any): MsgClearBalance;
    toJSON(message: MsgClearBalance): unknown;
    fromPartial<I extends {
        creator?: string | undefined;
        chainId?: string | undefined;
        amount?: string | undefined;
        channel?: string | undefined;
    } & {
        creator?: string | undefined;
        chainId?: string | undefined;
        amount?: string | undefined;
        channel?: string | undefined;
    } & Record<Exclude<keyof I, keyof MsgClearBalance>, never>>(object: I): MsgClearBalance;
};
export declare const MsgClearBalanceResponse: {
    encode(_: MsgClearBalanceResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgClearBalanceResponse;
    fromJSON(_: any): MsgClearBalanceResponse;
    toJSON(_: MsgClearBalanceResponse): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): MsgClearBalanceResponse;
};
export declare const MsgRedeemStake: {
    encode(message: MsgRedeemStake, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgRedeemStake;
    fromJSON(object: any): MsgRedeemStake;
    toJSON(message: MsgRedeemStake): unknown;
    fromPartial<I extends {
        creator?: string | undefined;
        amount?: string | undefined;
        hostZone?: string | undefined;
        receiver?: string | undefined;
    } & {
        creator?: string | undefined;
        amount?: string | undefined;
        hostZone?: string | undefined;
        receiver?: string | undefined;
    } & Record<Exclude<keyof I, keyof MsgRedeemStake>, never>>(object: I): MsgRedeemStake;
};
export declare const MsgRedeemStakeResponse: {
    encode(_: MsgRedeemStakeResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgRedeemStakeResponse;
    fromJSON(_: any): MsgRedeemStakeResponse;
    toJSON(_: MsgRedeemStakeResponse): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): MsgRedeemStakeResponse;
};
export declare const MsgRegisterHostZone: {
    encode(message: MsgRegisterHostZone, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgRegisterHostZone;
    fromJSON(object: any): MsgRegisterHostZone;
    toJSON(message: MsgRegisterHostZone): unknown;
    fromPartial<I extends {
        connectionId?: string | undefined;
        bech32prefix?: string | undefined;
        hostDenom?: string | undefined;
        ibcDenom?: string | undefined;
        creator?: string | undefined;
        transferChannelId?: string | undefined;
        unbondingPeriod?: string | undefined;
        minRedemptionRate?: string | undefined;
        maxRedemptionRate?: string | undefined;
        lsmLiquidStakeEnabled?: boolean | undefined;
    } & {
        connectionId?: string | undefined;
        bech32prefix?: string | undefined;
        hostDenom?: string | undefined;
        ibcDenom?: string | undefined;
        creator?: string | undefined;
        transferChannelId?: string | undefined;
        unbondingPeriod?: string | undefined;
        minRedemptionRate?: string | undefined;
        maxRedemptionRate?: string | undefined;
        lsmLiquidStakeEnabled?: boolean | undefined;
    } & Record<Exclude<keyof I, keyof MsgRegisterHostZone>, never>>(object: I): MsgRegisterHostZone;
};
export declare const MsgRegisterHostZoneResponse: {
    encode(_: MsgRegisterHostZoneResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgRegisterHostZoneResponse;
    fromJSON(_: any): MsgRegisterHostZoneResponse;
    toJSON(_: MsgRegisterHostZoneResponse): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): MsgRegisterHostZoneResponse;
};
export declare const MsgClaimUndelegatedTokens: {
    encode(message: MsgClaimUndelegatedTokens, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgClaimUndelegatedTokens;
    fromJSON(object: any): MsgClaimUndelegatedTokens;
    toJSON(message: MsgClaimUndelegatedTokens): unknown;
    fromPartial<I extends {
        creator?: string | undefined;
        hostZoneId?: string | undefined;
        epoch?: string | undefined;
        sender?: string | undefined;
    } & {
        creator?: string | undefined;
        hostZoneId?: string | undefined;
        epoch?: string | undefined;
        sender?: string | undefined;
    } & Record<Exclude<keyof I, keyof MsgClaimUndelegatedTokens>, never>>(object: I): MsgClaimUndelegatedTokens;
};
export declare const MsgClaimUndelegatedTokensResponse: {
    encode(_: MsgClaimUndelegatedTokensResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgClaimUndelegatedTokensResponse;
    fromJSON(_: any): MsgClaimUndelegatedTokensResponse;
    toJSON(_: MsgClaimUndelegatedTokensResponse): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): MsgClaimUndelegatedTokensResponse;
};
export declare const MsgRebalanceValidators: {
    encode(message: MsgRebalanceValidators, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgRebalanceValidators;
    fromJSON(object: any): MsgRebalanceValidators;
    toJSON(message: MsgRebalanceValidators): unknown;
    fromPartial<I extends {
        creator?: string | undefined;
        hostZone?: string | undefined;
        numRebalance?: string | undefined;
    } & {
        creator?: string | undefined;
        hostZone?: string | undefined;
        numRebalance?: string | undefined;
    } & Record<Exclude<keyof I, keyof MsgRebalanceValidators>, never>>(object: I): MsgRebalanceValidators;
};
export declare const MsgRebalanceValidatorsResponse: {
    encode(_: MsgRebalanceValidatorsResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgRebalanceValidatorsResponse;
    fromJSON(_: any): MsgRebalanceValidatorsResponse;
    toJSON(_: MsgRebalanceValidatorsResponse): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): MsgRebalanceValidatorsResponse;
};
export declare const MsgAddValidators: {
    encode(message: MsgAddValidators, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgAddValidators;
    fromJSON(object: any): MsgAddValidators;
    toJSON(message: MsgAddValidators): unknown;
    fromPartial<I extends {
        creator?: string | undefined;
        hostZone?: string | undefined;
        validators?: {
            name?: string | undefined;
            address?: string | undefined;
            weight?: string | undefined;
            delegation?: string | undefined;
            slashQueryProgressTracker?: string | undefined;
            slashQueryCheckpoint?: string | undefined;
            sharesToTokensRate?: string | undefined;
            delegationChangesInProgress?: string | undefined;
            slashQueryInProgress?: boolean | undefined;
        }[] | undefined;
    } & {
        creator?: string | undefined;
        hostZone?: string | undefined;
        validators?: ({
            name?: string | undefined;
            address?: string | undefined;
            weight?: string | undefined;
            delegation?: string | undefined;
            slashQueryProgressTracker?: string | undefined;
            slashQueryCheckpoint?: string | undefined;
            sharesToTokensRate?: string | undefined;
            delegationChangesInProgress?: string | undefined;
            slashQueryInProgress?: boolean | undefined;
        }[] & ({
            name?: string | undefined;
            address?: string | undefined;
            weight?: string | undefined;
            delegation?: string | undefined;
            slashQueryProgressTracker?: string | undefined;
            slashQueryCheckpoint?: string | undefined;
            sharesToTokensRate?: string | undefined;
            delegationChangesInProgress?: string | undefined;
            slashQueryInProgress?: boolean | undefined;
        } & {
            name?: string | undefined;
            address?: string | undefined;
            weight?: string | undefined;
            delegation?: string | undefined;
            slashQueryProgressTracker?: string | undefined;
            slashQueryCheckpoint?: string | undefined;
            sharesToTokensRate?: string | undefined;
            delegationChangesInProgress?: string | undefined;
            slashQueryInProgress?: boolean | undefined;
        } & Record<Exclude<keyof I["validators"][number], keyof Validator>, never>)[] & Record<Exclude<keyof I["validators"], keyof {
            name?: string | undefined;
            address?: string | undefined;
            weight?: string | undefined;
            delegation?: string | undefined;
            slashQueryProgressTracker?: string | undefined;
            slashQueryCheckpoint?: string | undefined;
            sharesToTokensRate?: string | undefined;
            delegationChangesInProgress?: string | undefined;
            slashQueryInProgress?: boolean | undefined;
        }[]>, never>) | undefined;
    } & Record<Exclude<keyof I, keyof MsgAddValidators>, never>>(object: I): MsgAddValidators;
};
export declare const MsgAddValidatorsResponse: {
    encode(_: MsgAddValidatorsResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgAddValidatorsResponse;
    fromJSON(_: any): MsgAddValidatorsResponse;
    toJSON(_: MsgAddValidatorsResponse): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): MsgAddValidatorsResponse;
};
export declare const MsgChangeValidatorWeight: {
    encode(message: MsgChangeValidatorWeight, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgChangeValidatorWeight;
    fromJSON(object: any): MsgChangeValidatorWeight;
    toJSON(message: MsgChangeValidatorWeight): unknown;
    fromPartial<I extends {
        creator?: string | undefined;
        hostZone?: string | undefined;
        valAddr?: string | undefined;
        weight?: string | undefined;
    } & {
        creator?: string | undefined;
        hostZone?: string | undefined;
        valAddr?: string | undefined;
        weight?: string | undefined;
    } & Record<Exclude<keyof I, keyof MsgChangeValidatorWeight>, never>>(object: I): MsgChangeValidatorWeight;
};
export declare const MsgChangeValidatorWeightResponse: {
    encode(_: MsgChangeValidatorWeightResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgChangeValidatorWeightResponse;
    fromJSON(_: any): MsgChangeValidatorWeightResponse;
    toJSON(_: MsgChangeValidatorWeightResponse): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): MsgChangeValidatorWeightResponse;
};
export declare const MsgDeleteValidator: {
    encode(message: MsgDeleteValidator, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgDeleteValidator;
    fromJSON(object: any): MsgDeleteValidator;
    toJSON(message: MsgDeleteValidator): unknown;
    fromPartial<I extends {
        creator?: string | undefined;
        hostZone?: string | undefined;
        valAddr?: string | undefined;
    } & {
        creator?: string | undefined;
        hostZone?: string | undefined;
        valAddr?: string | undefined;
    } & Record<Exclude<keyof I, keyof MsgDeleteValidator>, never>>(object: I): MsgDeleteValidator;
};
export declare const MsgDeleteValidatorResponse: {
    encode(_: MsgDeleteValidatorResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgDeleteValidatorResponse;
    fromJSON(_: any): MsgDeleteValidatorResponse;
    toJSON(_: MsgDeleteValidatorResponse): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): MsgDeleteValidatorResponse;
};
export declare const MsgRestoreInterchainAccount: {
    encode(message: MsgRestoreInterchainAccount, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgRestoreInterchainAccount;
    fromJSON(object: any): MsgRestoreInterchainAccount;
    toJSON(message: MsgRestoreInterchainAccount): unknown;
    fromPartial<I extends {
        creator?: string | undefined;
        chainId?: string | undefined;
        accountType?: ICAAccountType | undefined;
    } & {
        creator?: string | undefined;
        chainId?: string | undefined;
        accountType?: ICAAccountType | undefined;
    } & Record<Exclude<keyof I, keyof MsgRestoreInterchainAccount>, never>>(object: I): MsgRestoreInterchainAccount;
};
export declare const MsgRestoreInterchainAccountResponse: {
    encode(_: MsgRestoreInterchainAccountResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgRestoreInterchainAccountResponse;
    fromJSON(_: any): MsgRestoreInterchainAccountResponse;
    toJSON(_: MsgRestoreInterchainAccountResponse): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): MsgRestoreInterchainAccountResponse;
};
export declare const MsgUpdateValidatorSharesExchRate: {
    encode(message: MsgUpdateValidatorSharesExchRate, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgUpdateValidatorSharesExchRate;
    fromJSON(object: any): MsgUpdateValidatorSharesExchRate;
    toJSON(message: MsgUpdateValidatorSharesExchRate): unknown;
    fromPartial<I extends {
        creator?: string | undefined;
        chainId?: string | undefined;
        valoper?: string | undefined;
    } & {
        creator?: string | undefined;
        chainId?: string | undefined;
        valoper?: string | undefined;
    } & Record<Exclude<keyof I, keyof MsgUpdateValidatorSharesExchRate>, never>>(object: I): MsgUpdateValidatorSharesExchRate;
};
export declare const MsgUpdateValidatorSharesExchRateResponse: {
    encode(_: MsgUpdateValidatorSharesExchRateResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgUpdateValidatorSharesExchRateResponse;
    fromJSON(_: any): MsgUpdateValidatorSharesExchRateResponse;
    toJSON(_: MsgUpdateValidatorSharesExchRateResponse): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): MsgUpdateValidatorSharesExchRateResponse;
};
export declare const MsgUndelegateHost: {
    encode(message: MsgUndelegateHost, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgUndelegateHost;
    fromJSON(object: any): MsgUndelegateHost;
    toJSON(message: MsgUndelegateHost): unknown;
    fromPartial<I extends {
        creator?: string | undefined;
        amount?: string | undefined;
    } & {
        creator?: string | undefined;
        amount?: string | undefined;
    } & Record<Exclude<keyof I, keyof MsgUndelegateHost>, never>>(object: I): MsgUndelegateHost;
};
export declare const MsgUndelegateHostResponse: {
    encode(_: MsgUndelegateHostResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgUndelegateHostResponse;
    fromJSON(_: any): MsgUndelegateHostResponse;
    toJSON(_: MsgUndelegateHostResponse): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): MsgUndelegateHostResponse;
};
export declare const MsgCalibrateDelegation: {
    encode(message: MsgCalibrateDelegation, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgCalibrateDelegation;
    fromJSON(object: any): MsgCalibrateDelegation;
    toJSON(message: MsgCalibrateDelegation): unknown;
    fromPartial<I extends {
        creator?: string | undefined;
        chainId?: string | undefined;
        valoper?: string | undefined;
    } & {
        creator?: string | undefined;
        chainId?: string | undefined;
        valoper?: string | undefined;
    } & Record<Exclude<keyof I, keyof MsgCalibrateDelegation>, never>>(object: I): MsgCalibrateDelegation;
};
export declare const MsgCalibrateDelegationResponse: {
    encode(_: MsgCalibrateDelegationResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgCalibrateDelegationResponse;
    fromJSON(_: any): MsgCalibrateDelegationResponse;
    toJSON(_: MsgCalibrateDelegationResponse): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): MsgCalibrateDelegationResponse;
};
/** Msg defines the Msg service. */
export interface Msg {
    LiquidStake(request: MsgLiquidStake): Promise<MsgLiquidStakeResponse>;
    LSMLiquidStake(request: MsgLSMLiquidStake): Promise<MsgLSMLiquidStakeResponse>;
    RedeemStake(request: MsgRedeemStake): Promise<MsgRedeemStakeResponse>;
    RegisterHostZone(request: MsgRegisterHostZone): Promise<MsgRegisterHostZoneResponse>;
    ClaimUndelegatedTokens(request: MsgClaimUndelegatedTokens): Promise<MsgClaimUndelegatedTokensResponse>;
    RebalanceValidators(request: MsgRebalanceValidators): Promise<MsgRebalanceValidatorsResponse>;
    AddValidators(request: MsgAddValidators): Promise<MsgAddValidatorsResponse>;
    ChangeValidatorWeight(request: MsgChangeValidatorWeight): Promise<MsgChangeValidatorWeightResponse>;
    DeleteValidator(request: MsgDeleteValidator): Promise<MsgDeleteValidatorResponse>;
    RestoreInterchainAccount(request: MsgRestoreInterchainAccount): Promise<MsgRestoreInterchainAccountResponse>;
    UpdateValidatorSharesExchRate(request: MsgUpdateValidatorSharesExchRate): Promise<MsgUpdateValidatorSharesExchRateResponse>;
    CalibrateDelegation(request: MsgCalibrateDelegation): Promise<MsgCalibrateDelegationResponse>;
    ClearBalance(request: MsgClearBalance): Promise<MsgClearBalanceResponse>;
    UndelegateHost(request: MsgUndelegateHost): Promise<MsgUndelegateHostResponse>;
    UpdateInnerRedemptionRateBounds(request: MsgUpdateInnerRedemptionRateBounds): Promise<MsgUpdateInnerRedemptionRateBoundsResponse>;
}
type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
export type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
type KeysOfUnion<T> = T extends T ? keyof T : never;
export type Exact<P, I extends P> = P extends Builtin ? P : P & {
    [K in keyof P]: Exact<P[K], I[K]>;
} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;
export {};
