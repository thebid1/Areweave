import { StdFee } from "@cosmjs/amino/build/signdoc";
import { MsgClaimCommissionRewards, MsgCreateStaker } from "@kyvejs/types/client/kyve/stakers/v1beta1/tx";
import { MsgUpdateMetadata } from "@kyvejs/types/client/kyve/stakers/v1beta1/tx";
import { MsgUpdateCommission } from "@kyvejs/types/client/kyve/stakers/v1beta1/tx";
import { MsgJoinPool } from "@kyvejs/types/client/kyve/stakers/v1beta1/tx";
import { MsgLeavePool } from "@kyvejs/types/client/kyve/stakers/v1beta1/tx";
import { KyveSigning, PendingTx } from "../../../signing";
export default class KyveStakersMethods extends KyveSigning {
    createStaker(value: Omit<MsgCreateStaker, "creator">, options?: {
        fee?: StdFee | "auto" | number;
        memo?: string;
    }): PendingTx<import("../../../signing").PendingSignedTx>;
    updateMetadata(value: Omit<MsgUpdateMetadata, "creator">, options?: {
        fee?: StdFee | "auto" | number;
        memo?: string;
    }): PendingTx<import("../../../signing").PendingSignedTx>;
    updateCommission(value: Omit<MsgUpdateCommission, "creator">, options?: {
        fee?: StdFee | "auto" | number;
        memo?: string;
    }): PendingTx<import("../../../signing").PendingSignedTx>;
    claimCommissionRewards(value: Omit<MsgClaimCommissionRewards, "creator">, options?: {
        fee?: StdFee | "auto" | number;
        memo?: string;
    }): PendingTx<import("../../../signing").PendingSignedTx>;
    joinPool(value: Omit<MsgJoinPool, "creator">, options?: {
        fee?: StdFee | "auto" | number;
        memo?: string;
    }): PendingTx<import("../../../signing").PendingSignedTx>;
    leavePool(value: Omit<MsgLeavePool, "creator">, options?: {
        fee?: StdFee | "auto" | number;
        memo?: string;
    }): PendingTx<import("../../../signing").PendingSignedTx>;
}
