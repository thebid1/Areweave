"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var stargate_1 = require("@cosmjs/stargate");
var gov_1 = require("@kyvejs/types/client/cosmos/gov/v1/gov");
var constants_1 = require("../../../../../constants");
var tx_registry_1 = require("../../../../../registry/tx.registry");
var signing_1 = require("../../../signing");
var KyveGovMsg = /** @class */ (function (_super) {
    __extends(KyveGovMsg, _super);
    function KyveGovMsg() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    KyveGovMsg.prototype.createGovTx = function (content, deposit, title, summary, metadata) {
        return {
            typeUrl: "/cosmos.gov.v1.MsgSubmitProposal",
            value: {
                messages: [content],
                initial_deposit: (0, stargate_1.coins)(deposit.toString(), this.config.coinDenom),
                proposer: this.account.address,
                title: title,
                summary: summary,
                metadata: metadata,
            },
        };
    };
    KyveGovMsg.prototype.createPool = function (value, deposit, title, summary, metadata, options) {
        var _this = this;
        var tx = this.createGovTx(tx_registry_1.encodeTxMsg.createPool(__assign(__assign({}, value), { authority: constants_1.GOV_AUTHORITY })), deposit, title, summary, metadata);
        return new signing_1.PendingTx({ tx: [tx] }, function () {
            return _this.getPendingSignedTx(tx, options);
        });
    };
    KyveGovMsg.prototype.updatePool = function (value, deposit, title, summary, metadata, options) {
        var _this = this;
        var tx = this.createGovTx(tx_registry_1.encodeTxMsg.updatePool(__assign(__assign({}, value), { authority: constants_1.GOV_AUTHORITY })), deposit, title, summary, metadata);
        return new signing_1.PendingTx({ tx: [tx] }, function () {
            return _this.getPendingSignedTx(tx, options);
        });
    };
    KyveGovMsg.prototype.disablePool = function (value, deposit, title, summary, metadata, options) {
        var _this = this;
        var tx = this.createGovTx(tx_registry_1.encodeTxMsg.disablePool(__assign(__assign({}, value), { authority: constants_1.GOV_AUTHORITY })), deposit, title, summary, metadata);
        return new signing_1.PendingTx({ tx: [tx] }, function () {
            return _this.getPendingSignedTx(tx, options);
        });
    };
    KyveGovMsg.prototype.enablePool = function (value, deposit, title, summary, metadata, options) {
        var _this = this;
        var tx = this.createGovTx(tx_registry_1.encodeTxMsg.enablePool(__assign(__assign({}, value), { authority: constants_1.GOV_AUTHORITY })), deposit, title, summary, metadata);
        return new signing_1.PendingTx({ tx: [tx] }, function () {
            return _this.getPendingSignedTx(tx, options);
        });
    };
    KyveGovMsg.prototype.scheduleRuntimeUpgrade = function (value, deposit, title, summary, metadata, options) {
        var _this = this;
        var tx = this.createGovTx(tx_registry_1.encodeTxMsg.scheduleRuntimeUpgrade(__assign(__assign({}, value), { authority: constants_1.GOV_AUTHORITY })), deposit, title, summary, metadata);
        return new signing_1.PendingTx({ tx: [tx] }, function () {
            return _this.getPendingSignedTx(tx, options);
        });
    };
    KyveGovMsg.prototype.cancelRuntimeUpgrade = function (value, deposit, title, summary, metadata, options) {
        var _this = this;
        var tx = this.createGovTx(tx_registry_1.encodeTxMsg.cancelRuntimeUpgrade(__assign(__assign({}, value), { authority: constants_1.GOV_AUTHORITY })), deposit, title, summary, metadata);
        return new signing_1.PendingTx({ tx: [tx] }, function () {
            return _this.getPendingSignedTx(tx, options);
        });
    };
    KyveGovMsg.prototype.updateParamsStakers = function (value, deposit, title, summary, metadata, options) {
        var _this = this;
        var tx = this.createGovTx(tx_registry_1.encodeTxMsg.updateParamsStakers(__assign(__assign({}, value), { authority: constants_1.GOV_AUTHORITY })), deposit, title, summary, metadata);
        return new signing_1.PendingTx({ tx: [tx] }, function () {
            return _this.getPendingSignedTx(tx, options);
        });
    };
    KyveGovMsg.prototype.updateParamsDelegation = function (value, deposit, title, summary, metadata, options) {
        var _this = this;
        var tx = this.createGovTx(tx_registry_1.encodeTxMsg.updateParamsDelegation(__assign(__assign({}, value), { authority: constants_1.GOV_AUTHORITY })), deposit, title, summary, metadata);
        return new signing_1.PendingTx({ tx: [tx] }, function () {
            return _this.getPendingSignedTx(tx, options);
        });
    };
    KyveGovMsg.prototype.updateParamsBundles = function (value, deposit, title, summary, metadata, options) {
        var _this = this;
        var tx = this.createGovTx(tx_registry_1.encodeTxMsg.updateParamsBundles(__assign(__assign({}, value), { authority: constants_1.GOV_AUTHORITY })), deposit, title, summary, metadata);
        return new signing_1.PendingTx({ tx: [tx] }, function () {
            return _this.getPendingSignedTx(tx, options);
        });
    };
    KyveGovMsg.prototype.updateParamsGlobal = function (value, deposit, title, summary, metadata, options) {
        var _this = this;
        var tx = this.createGovTx(tx_registry_1.encodeTxMsg.updateParamsGlobal(__assign(__assign({}, value), { authority: constants_1.GOV_AUTHORITY })), deposit, title, summary, metadata);
        return new signing_1.PendingTx({ tx: [tx] }, function () {
            return _this.getPendingSignedTx(tx, options);
        });
    };
    KyveGovMsg.prototype.vote = function (id, voteOption, options) {
        var _this = this;
        var _option = gov_1.VoteOption.VOTE_OPTION_UNSPECIFIED;
        switch (voteOption) {
            case "Yes":
                _option = gov_1.VoteOption.VOTE_OPTION_YES;
                break;
            case "Abstain":
                _option = gov_1.VoteOption.VOTE_OPTION_ABSTAIN;
                break;
            case "No":
                _option = gov_1.VoteOption.VOTE_OPTION_NO;
                break;
            case "NoWithVeto":
                _option = gov_1.VoteOption.VOTE_OPTION_NO_WITH_VETO;
                break;
        }
        var tx = {
            typeUrl: "/cosmos.gov.v1.MsgVote",
            value: {
                proposal_id: id,
                voter: this.account.address,
                option: _option,
            },
        };
        return new signing_1.PendingTx({ tx: [tx] }, function () {
            return _this.getPendingSignedTx(tx, options);
        });
    };
    return KyveGovMsg;
}(signing_1.KyveSigning));
exports.default = KyveGovMsg;
//# sourceMappingURL=gov.js.map