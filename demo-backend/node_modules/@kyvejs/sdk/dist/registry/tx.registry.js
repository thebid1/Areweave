"use strict";
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.withTypeUrl = exports.encodeTxMsg = exports.load = exports.registry = void 0;
var stargate_1 = require("@cosmjs/stargate");
/** cosmos **/
var tx_1 = require("@kyvejs/types/client/cosmos/gov/v1/tx");
var tx_2 = require("@kyvejs/types/client/cosmos/gov/v1/tx");
/** bundles **/
var tx_3 = require("@kyvejs/types/client/kyve/bundles/v1beta1/tx");
var tx_4 = require("@kyvejs/types/client/kyve/bundles/v1beta1/tx");
var tx_5 = require("@kyvejs/types/client/kyve/bundles/v1beta1/tx");
var tx_6 = require("@kyvejs/types/client/kyve/bundles/v1beta1/tx");
var tx_7 = require("@kyvejs/types/client/kyve/bundles/v1beta1/tx");
/** delegations **/
var tx_8 = require("@kyvejs/types/client/kyve/delegation/v1beta1/tx");
var tx_9 = require("@kyvejs/types/client/kyve/delegation/v1beta1/tx");
var tx_10 = require("@kyvejs/types/client/kyve/delegation/v1beta1/tx");
var tx_11 = require("@kyvejs/types/client/kyve/delegation/v1beta1/tx");
var tx_12 = require("@kyvejs/types/client/kyve/delegation/v1beta1/tx");
var tx_13 = require("@kyvejs/types/client/kyve/funders/v1beta1/tx");
var tx_14 = require("@kyvejs/types/client/kyve/funders/v1beta1/tx");
/** fees **/
var tx_15 = require("@kyvejs/types/client/kyve/global/v1beta1/tx");
var tx_16 = require("@kyvejs/types/client/kyve/pool/v1beta1/tx");
var tx_17 = require("@kyvejs/types/client/kyve/pool/v1beta1/tx");
var tx_18 = require("@kyvejs/types/client/kyve/pool/v1beta1/tx");
var tx_19 = require("@kyvejs/types/client/kyve/pool/v1beta1/tx");
var tx_20 = require("@kyvejs/types/client/kyve/pool/v1beta1/tx");
var tx_21 = require("@kyvejs/types/client/kyve/pool/v1beta1/tx");
/** stakers **/
var tx_22 = require("@kyvejs/types/client/kyve/stakers/v1beta1/tx");
var tx_23 = require("@kyvejs/types/client/kyve/stakers/v1beta1/tx");
var tx_24 = require("@kyvejs/types/client/kyve/stakers/v1beta1/tx");
var tx_25 = require("@kyvejs/types/client/kyve/stakers/v1beta1/tx");
var tx_26 = require("@kyvejs/types/client/kyve/stakers/v1beta1/tx");
var tx_27 = require("@kyvejs/types/client/kyve/stakers/v1beta1/tx");
/** funders **/
var tx_28 = require("@kyvejs/types/lcd/kyve/funders/v1beta1/tx");
var tx_29 = require("@kyvejs/types/lcd/kyve/funders/v1beta1/tx");
exports.registry = __spreadArray(__spreadArray([], stargate_1.defaultRegistryTypes, true), [
    /**pool **/
    ["/kyve.pool.v1beta1.MsgCreatePool", tx_16.MsgCreatePool],
    ["/kyve.pool.v1beta1.UpdatePool", tx_17.MsgUpdatePool],
    ["/kyve.pool.v1beta1.MsgDisablePool", tx_18.MsgDisablePool],
    ["/kyve.pool.v1beta1.MsgEnablePool", tx_19.MsgEnablePool],
    ["/kyve.pool.v1beta1.MsgScheduleRuntimeUpgrade", tx_20.MsgScheduleRuntimeUpgrade],
    ["/kyve.pool.v1beta1.MsgCancelRuntimeUpgrade", tx_21.MsgCancelRuntimeUpgrade],
    /** funders **/
    ["/kyve.funders.v1beta1.MsgCreateFunder", tx_28.MsgCreateFunder],
    ["/kyve.funders.v1beta1.MsgUpdateFunder", tx_29.MsgUpdateFunder],
    ["/kyve.funders.v1beta1.MsgFundPool", tx_13.MsgFundPool],
    ["/kyve.funders.v1beta1.MsgDefundPool", tx_14.MsgDefundPool],
    /** stakers **/
    ["/kyve.stakers.v1beta1.MsgCreateStaker", tx_22.MsgCreateStaker],
    ["/kyve.stakers.v1beta1.MsgUpdateMetadata", tx_23.MsgUpdateMetadata],
    ["/kyve.stakers.v1beta1.MsgUpdateCommission", tx_25.MsgUpdateCommission],
    [
        "/kyve.stakers.v1beta1.MsgClaimCommissionRewards",
        tx_22.MsgClaimCommissionRewards,
    ],
    ["/kyve.stakers.v1beta1.MsgJoinPool", tx_24.MsgJoinPool],
    ["/kyve.stakers.v1beta1.MsgLeavePool", tx_26.MsgLeavePool],
    /** delegations  **/
    ["/kyve.delegation.v1beta1.MsgDelegate", tx_8.MsgDelegate],
    ["/kyve.delegation.v1beta1.MsgWithdrawRewards", tx_9.MsgWithdrawRewards],
    ["/kyve.delegation.v1beta1.MsgUndelegate", tx_11.MsgUndelegate],
    ["/kyve.delegation.v1beta1.MsgRedelegate", tx_10.MsgRedelegate],
    /** bundles **/
    ["/kyve.bundles.v1beta1.MsgSubmitBundleProposal", tx_3.MsgSubmitBundleProposal],
    ["/kyve.bundles.v1beta1.MsgVoteBundleProposal", tx_4.MsgVoteBundleProposal],
    ["/kyve.bundles.v1beta1.MsgClaimUploaderRole", tx_5.MsgClaimUploaderRole],
    ["/kyve.bundles.v1beta1.MsgSkipUploaderRole", tx_6.MsgSkipUploaderRole],
    /** cosmos **/
    ["/cosmos.gov.v1.MsgSubmitProposal", tx_1.MsgSubmitProposal],
    ["/cosmos.gov.v1.MsgVote", tx_2.MsgVote],
], false);
var load = function (protoRegistry) {
    exports.registry.forEach(function (_a) {
        var typeUrl = _a[0], mod = _a[1];
        protoRegistry.register(typeUrl, mod);
    });
};
exports.load = load;
exports.encodeTxMsg = {
    createFunder: function (value) {
        return {
            type_url: "/kyve.funders.v1beta1.MsgCreateFunder",
            value: tx_28.MsgCreateFunder.encode(value).finish(),
        };
    },
    updateFunder: function (value) {
        return {
            type_url: "/kyve.funders.v1beta1.MsgUpdateFunder",
            value: tx_29.MsgUpdateFunder.encode(value).finish(),
        };
    },
    fundPool: function (value) {
        return {
            type_url: "/kyve.funders.v1beta1.MsgFundPool",
            value: tx_13.MsgFundPool.encode(value).finish(),
        };
    },
    defundPool: function (value) {
        return {
            type_url: "/kyve.funders.v1beta1.MsgDefundPool",
            value: tx_14.MsgDefundPool.encode(value).finish(),
        };
    },
    createPool: function (value) {
        return {
            type_url: "/kyve.pool.v1beta1.MsgCreatePool",
            value: tx_16.MsgCreatePool.encode(value).finish(),
        };
    },
    updatePool: function (value) {
        return {
            type_url: "/kyve.pool.v1beta1.MsgUpdatePool",
            value: tx_17.MsgUpdatePool.encode(value).finish(),
        };
    },
    disablePool: function (value) {
        return {
            type_url: "/kyve.pool.v1beta1.MsgDisablePool",
            value: tx_18.MsgDisablePool.encode(value).finish(),
        };
    },
    enablePool: function (value) {
        return {
            type_url: "/kyve.pool.v1beta1.MsgEnablePool",
            value: tx_19.MsgEnablePool.encode(value).finish(),
        };
    },
    scheduleRuntimeUpgrade: function (value) {
        return {
            type_url: "/kyve.pool.v1beta1.MsgScheduleRuntimeUpgrade",
            value: tx_20.MsgScheduleRuntimeUpgrade.encode(value).finish(),
        };
    },
    cancelRuntimeUpgrade: function (value) {
        return {
            type_url: "/kyve.pool.v1beta1.MsgCancelRuntimeUpgrade",
            value: tx_21.MsgCancelRuntimeUpgrade.encode(value).finish(),
        };
    },
    createStaker: function (value) {
        return {
            type_url: "/kyve.stakers.v1beta1.MsgCreateStaker",
            value: tx_22.MsgCreateStaker.encode(value).finish(),
        };
    },
    updateMetadata: function (value) {
        return {
            type_url: "/kyve.stakers.v1beta1.MsgUpdateMetadata",
            value: tx_23.MsgUpdateMetadata.encode(value).finish(),
        };
    },
    updateCommission: function (value) {
        return {
            type_url: "/kyve.stakers.v1beta1.MsgUpdateCommission",
            value: tx_25.MsgUpdateCommission.encode(value).finish(),
        };
    },
    claimCommissionRewards: function (value) {
        return {
            type_url: "/kyve.stakers.v1beta1.MsgClaimCommissionRewards",
            value: tx_22.MsgClaimCommissionRewards.encode(value).finish(),
        };
    },
    joinPool: function (value) {
        return {
            type_url: "/kyve.stakers.v1beta1.MsgJoinPool",
            value: tx_24.MsgJoinPool.encode(value).finish(),
        };
    },
    leavePool: function (value) {
        return {
            type_url: "/kyve.stakers.v1beta1.MsgLeavePool",
            value: tx_26.MsgLeavePool.encode(value).finish(),
        };
    },
    delegate: function (value) {
        return {
            type_url: "/kyve.delegation.v1beta1.MsgDelegate",
            value: tx_8.MsgDelegate.encode(value).finish(),
        };
    },
    withdrawRewards: function (value) {
        return {
            type_url: "/kyve.delegation.v1beta1.MsgWithdrawRewards",
            value: tx_9.MsgWithdrawRewards.encode(value).finish(),
        };
    },
    undelegate: function (value) {
        return {
            type_url: "/kyve.delegation.v1beta1.MsgUndelegate",
            value: tx_11.MsgUndelegate.encode(value).finish(),
        };
    },
    redelegate: function (value) {
        return {
            type_url: "/kyve.delegation.v1beta1.MsgRedelegate",
            value: tx_10.MsgRedelegate.encode(value).finish(),
        };
    },
    submitBundleProposal: function (value) {
        return {
            type_url: "/kyve.bundles.v1beta1.MsgSubmitBundleProposal",
            value: tx_3.MsgSubmitBundleProposal.encode(value).finish(),
        };
    },
    voteBundleProposal: function (value) {
        return {
            type_url: "/kyve.bundles.v1beta1.MsgVoteBundleProposal",
            value: tx_4.MsgVoteBundleProposal.encode(value).finish(),
        };
    },
    claimUploaderRole: function (value) {
        return {
            type_url: "/kyve.bundles.v1beta1.MsgClaimUploaderRole",
            value: tx_5.MsgClaimUploaderRole.encode(value).finish(),
        };
    },
    updateParamsStakers: function (value) {
        return {
            type_url: "/kyve.stakers.v1beta1.MsgUpdateParams",
            value: tx_27.MsgUpdateParams.encode(value).finish(),
        };
    },
    updateParamsDelegation: function (value) {
        return {
            type_url: "/kyve.delegation.v1beta1.MsgUpdateParams",
            value: tx_12.MsgUpdateParams.encode(value).finish(),
        };
    },
    updateParamsBundles: function (value) {
        return {
            type_url: "/kyve.bundles.v1beta1.MsgUpdateParams",
            value: tx_7.MsgUpdateParams.encode(value).finish(),
        };
    },
    updateParamsGlobal: function (value) {
        return {
            type_url: "/kyve.global.v1beta1.MsgUpdateParams",
            value: tx_15.MsgUpdateParams.encode(value).finish(),
        };
    },
};
exports.withTypeUrl = {
    createFunder: function (value) {
        return {
            typeUrl: "/kyve.funders.v1beta1.MsgCreateFunder",
            value: value,
        };
    },
    updateFunder: function (value) {
        return {
            typeUrl: "/kyve.funders.v1beta1.MsgUpdateFunder",
            value: value,
        };
    },
    fundPool: function (value) {
        return {
            typeUrl: "/kyve.funders.v1beta1.MsgFundPool",
            value: value,
        };
    },
    defundPool: function (value) {
        return {
            typeUrl: "/kyve.funders.v1beta1.MsgDefundPool",
            value: value,
        };
    },
    createPool: function (value) {
        return {
            typeUrl: "/kyve.pool.v1beta1.MsgCreatePool",
            value: value,
        };
    },
    updatePool: function (value) {
        return {
            typeUrl: "/kyve.pool.v1beta1.MsgUpdatePool",
            value: value,
        };
    },
    disablePool: function (value) {
        return {
            typeUrl: "/kyve.pool.v1beta1.MsgDisablePool",
            value: value,
        };
    },
    enablePool: function (value) {
        return {
            typeUrl: "/kyve.pool.v1beta1.MsgEnablePool",
            value: value,
        };
    },
    scheduleRuntimeUpgrade: function (value) {
        return {
            typeUrl: "/kyve.pool.v1beta1.MsgScheduleRuntimeUpgrade",
            value: value,
        };
    },
    cancelRuntimeUpgrade: function (value) {
        return {
            typeUrl: "/kyve.pool.v1beta1.MsgCancelRuntimeUpgrade",
            value: value,
        };
    },
    createStaker: function (value) {
        return {
            typeUrl: "/kyve.stakers.v1beta1.MsgCreateStaker",
            value: value,
        };
    },
    updateMetadata: function (value) {
        return {
            typeUrl: "/kyve.stakers.v1beta1.MsgUpdateMetadata",
            value: value,
        };
    },
    updateCommission: function (value) {
        return {
            typeUrl: "/kyve.stakers.v1beta1.MsgUpdateCommission",
            value: value,
        };
    },
    claimCommissionRewards: function (value) {
        return {
            typeUrl: "/kyve.stakers.v1beta1.MsgClaimCommissionRewards",
            value: value,
        };
    },
    joinPool: function (value) {
        return {
            typeUrl: "/kyve.stakers.v1beta1.MsgJoinPool",
            value: value,
        };
    },
    leavePool: function (value) {
        return {
            typeUrl: "/kyve.stakers.v1beta1.MsgLeavePool",
            value: value,
        };
    },
    delegate: function (value) {
        return {
            typeUrl: "/kyve.delegation.v1beta1.MsgDelegate",
            value: value,
        };
    },
    withdrawRewards: function (value) {
        return {
            typeUrl: "/kyve.delegation.v1beta1.MsgWithdrawRewards",
            value: value,
        };
    },
    undelegate: function (value) {
        return {
            typeUrl: "/kyve.delegation.v1beta1.MsgUndelegate",
            value: value,
        };
    },
    redelegate: function (value) {
        return {
            typeUrl: "/kyve.delegation.v1beta1.MsgRedelegate",
            value: value,
        };
    },
    submitBundleProposal: function (value) {
        return {
            typeUrl: "/kyve.bundles.v1beta1.MsgSubmitBundleProposal",
            value: value,
        };
    },
    voteBundleProposal: function (value) {
        return {
            typeUrl: "/kyve.bundles.v1beta1.MsgVoteBundleProposal",
            value: value,
        };
    },
    skipUploaderRole: function (value) {
        return {
            typeUrl: "/kyve.bundles.v1beta1.MsgSkipUploaderRole",
            value: value,
        };
    },
    claimUploaderRole: function (value) {
        return {
            typeUrl: "/kyve.bundles.v1beta1.MsgClaimUploaderRole",
            value: value,
        };
    },
    updateParamsStakers: function (value) {
        return {
            typeUrl: "/kyve.stakers.v1beta1.MsgUpdateParams",
            value: value,
        };
    },
    updateParamsDelegation: function (value) {
        return {
            typeUrl: "/kyve.delegation.v1beta1.MsgUpdateParams",
            value: value,
        };
    },
    updateParamsBundles: function (value) {
        return {
            typeUrl: "/kyve.bundles.v1beta1.MsgUpdateParams",
            value: value,
        };
    },
    updateParamsGlobal: function (value) {
        return {
            typeUrl: "/kyve.global.v1beta1.MsgUpdateParams",
            value: value,
        };
    },
};
//# sourceMappingURL=tx.registry.js.map