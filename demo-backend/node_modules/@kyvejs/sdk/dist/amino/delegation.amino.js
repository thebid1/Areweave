"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createDelegationAminoConverters = void 0;
var utils_1 = require("../utils");
var createDelegationAminoConverters = function () {
    return {
        "/kyve.delegation.v1beta1.MsgDelegate": {
            aminoType: "/kyve.delegation.v1beta1.MsgDelegate",
            toAmino: function (msg) { return (__assign({ creator: msg.creator, staker: msg.staker }, ((0, utils_1.isNotEmpty)(msg.amount) && { amount: msg.amount }))); },
            fromAmino: function (msg) { return ({
                creator: msg.creator,
                staker: msg.staker,
                amount: msg.amount,
            }); },
        },
        "/kyve.delegation.v1beta1.MsgWithdrawRewards": {
            aminoType: "/kyve.delegation.v1beta1.MsgWithdrawRewards",
            toAmino: function (msg) { return ({
                creator: msg.creator,
                staker: msg.staker,
            }); },
            fromAmino: function (msg) { return ({
                creator: msg.creator,
                staker: msg.staker,
            }); },
        },
        "/kyve.delegation.v1beta1.MsgRedelegate": {
            aminoType: "/kyve.delegation.v1beta1.MsgRedelegate",
            toAmino: function (msg) { return (__assign({ creator: msg.creator, from_staker: msg.from_staker, to_staker: msg.to_staker }, ((0, utils_1.isNotEmpty)(msg.amount) && { amount: msg.amount }))); },
            fromAmino: function (msg) { return ({
                creator: msg.creator,
                from_staker: msg.from_staker,
                to_staker: msg.to_staker,
                amount: msg.amount,
            }); },
        },
        "/kyve.delegation.v1beta1.MsgUndelegate": {
            aminoType: "/kyve.delegation.v1beta1.MsgUndelegate",
            toAmino: function (msg) { return (__assign({ creator: msg.creator, staker: msg.staker }, ((0, utils_1.isNotEmpty)(msg.amount) && { amount: msg.amount }))); },
            fromAmino: function (msg) { return ({
                creator: msg.creator,
                staker: msg.staker,
                amount: msg.amount,
            }); },
        },
    };
};
exports.createDelegationAminoConverters = createDelegationAminoConverters;
//# sourceMappingURL=delegation.amino.js.map