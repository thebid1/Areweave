"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.offNetworkChange = exports.onNetworkChange = exports.offAccountChange = exports.onAccountChange = exports.signMessage = exports.signTransaction = exports.signAndSubmitTransaction = exports.account = exports.network = exports.isConnected = exports.disconnect = exports.connect = void 0;
var connect = function () { return window.cosmostation.aptos.request({ method: 'aptos_connect', params: undefined }); };
exports.connect = connect;
var disconnect = function () { return window.cosmostation.aptos.request({ method: 'aptos_disconnect', params: undefined }); };
exports.disconnect = disconnect;
var isConnected = function () { return window.cosmostation.aptos.request({ method: 'aptos_isConnected', params: undefined }); };
exports.isConnected = isConnected;
var network = function () { return window.cosmostation.aptos.request({ method: 'aptos_network', params: undefined }); };
exports.network = network;
var account = function () { return window.cosmostation.aptos.request({ method: 'aptos_account', params: undefined }); };
exports.account = account;
var signAndSubmitTransaction = function (payload) {
    return window.cosmostation.aptos.request({ method: 'aptos_signAndSubmitTransaction', params: [payload] });
};
exports.signAndSubmitTransaction = signAndSubmitTransaction;
var signTransaction = function (payload) {
    return window.cosmostation.aptos.request({ method: 'aptos_signTransaction', params: [payload] });
};
exports.signTransaction = signTransaction;
var signMessage = function (params) {
    return window.cosmostation.aptos.request({ method: 'aptos_signMessage', params: [params] });
};
exports.signMessage = signMessage;
var onAccountChange = function (eventHandler) {
    window.cosmostation.aptos.on('accountChange', eventHandler);
};
exports.onAccountChange = onAccountChange;
var offAccountChange = function (eventHandler) {
    window.cosmostation.aptos.off('accountChange', eventHandler);
};
exports.offAccountChange = offAccountChange;
var onNetworkChange = function (eventHandler) {
    window.cosmostation.aptos.on('networkChange', eventHandler);
};
exports.onNetworkChange = onNetworkChange;
var offNetworkChange = function (eventHandler) {
    window.cosmostation.aptos.off('networkChange', eventHandler);
};
exports.offNetworkChange = offNetworkChange;
