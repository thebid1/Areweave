import _m0 from "protobufjs/minimal";
export declare const protobufPackage = "agoric.swingset";
/** MsgDeliverInbound defines an SDK message for delivering an eventual send */
export interface MsgDeliverInbound {
    messages: string[];
    nums: string[];
    ack: string;
    submitter: Uint8Array;
}
/** MsgDeliverInboundResponse is an empty reply. */
export interface MsgDeliverInboundResponse {
}
/**
 * MsgWalletAction defines an SDK message for the on-chain wallet to perform an
 * action that *does not* spend any assets (other than gas fees/stamps).  This
 * message type is typically protected by feegrant budgets.
 */
export interface MsgWalletAction {
    owner: Uint8Array;
    /** The action to perform, as JSON-stringified marshalled data. */
    action: string;
}
/** MsgWalletActionResponse is an empty reply. */
export interface MsgWalletActionResponse {
}
/**
 * MsgWalletSpendAction defines an SDK message for the on-chain wallet to
 * perform an action that *does spend the owner's assets.*  This message type is
 * typically protected by explicit confirmation by the user.
 */
export interface MsgWalletSpendAction {
    owner: Uint8Array;
    /** The action to perform, as JSON-stringified marshalled data. */
    spendAction: string;
}
/** MsgWalletSpendActionResponse is an empty reply. */
export interface MsgWalletSpendActionResponse {
}
/** MsgProvision defines an SDK message for provisioning a client to the chain */
export interface MsgProvision {
    nickname: string;
    address: Uint8Array;
    powerFlags: string[];
    submitter: Uint8Array;
}
/** MsgProvisionResponse is an empty reply. */
export interface MsgProvisionResponse {
}
/** MsgInstallBundle carries a signed bundle to SwingSet. */
export interface MsgInstallBundle {
    bundle: string;
    submitter: Uint8Array;
    /**
     * Either bundle or compressed_bundle will be set.
     * Default compression algorithm is gzip.
     */
    compressedBundle: Uint8Array;
    /** Size in bytes of uncompression of compressed_bundle. */
    uncompressedSize: string;
}
/**
 * MsgInstallBundleResponse is an empty acknowledgement that an install bundle
 * message has been queued for the SwingSet kernel's consideration.
 */
export interface MsgInstallBundleResponse {
}
export declare const MsgDeliverInbound: {
    encode(message: MsgDeliverInbound, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgDeliverInbound;
    fromJSON(object: any): MsgDeliverInbound;
    toJSON(message: MsgDeliverInbound): unknown;
    fromPartial<I extends {
        messages?: string[] | undefined;
        nums?: string[] | undefined;
        ack?: string | undefined;
        submitter?: Uint8Array | undefined;
    } & {
        messages?: (string[] & string[] & Record<Exclude<keyof I["messages"], keyof string[]>, never>) | undefined;
        nums?: (string[] & string[] & Record<Exclude<keyof I["nums"], keyof string[]>, never>) | undefined;
        ack?: string | undefined;
        submitter?: Uint8Array | undefined;
    } & Record<Exclude<keyof I, keyof MsgDeliverInbound>, never>>(object: I): MsgDeliverInbound;
};
export declare const MsgDeliverInboundResponse: {
    encode(_: MsgDeliverInboundResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgDeliverInboundResponse;
    fromJSON(_: any): MsgDeliverInboundResponse;
    toJSON(_: MsgDeliverInboundResponse): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): MsgDeliverInboundResponse;
};
export declare const MsgWalletAction: {
    encode(message: MsgWalletAction, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgWalletAction;
    fromJSON(object: any): MsgWalletAction;
    toJSON(message: MsgWalletAction): unknown;
    fromPartial<I extends {
        owner?: Uint8Array | undefined;
        action?: string | undefined;
    } & {
        owner?: Uint8Array | undefined;
        action?: string | undefined;
    } & Record<Exclude<keyof I, keyof MsgWalletAction>, never>>(object: I): MsgWalletAction;
};
export declare const MsgWalletActionResponse: {
    encode(_: MsgWalletActionResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgWalletActionResponse;
    fromJSON(_: any): MsgWalletActionResponse;
    toJSON(_: MsgWalletActionResponse): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): MsgWalletActionResponse;
};
export declare const MsgWalletSpendAction: {
    encode(message: MsgWalletSpendAction, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgWalletSpendAction;
    fromJSON(object: any): MsgWalletSpendAction;
    toJSON(message: MsgWalletSpendAction): unknown;
    fromPartial<I extends {
        owner?: Uint8Array | undefined;
        spendAction?: string | undefined;
    } & {
        owner?: Uint8Array | undefined;
        spendAction?: string | undefined;
    } & Record<Exclude<keyof I, keyof MsgWalletSpendAction>, never>>(object: I): MsgWalletSpendAction;
};
export declare const MsgWalletSpendActionResponse: {
    encode(_: MsgWalletSpendActionResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgWalletSpendActionResponse;
    fromJSON(_: any): MsgWalletSpendActionResponse;
    toJSON(_: MsgWalletSpendActionResponse): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): MsgWalletSpendActionResponse;
};
export declare const MsgProvision: {
    encode(message: MsgProvision, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgProvision;
    fromJSON(object: any): MsgProvision;
    toJSON(message: MsgProvision): unknown;
    fromPartial<I extends {
        nickname?: string | undefined;
        address?: Uint8Array | undefined;
        powerFlags?: string[] | undefined;
        submitter?: Uint8Array | undefined;
    } & {
        nickname?: string | undefined;
        address?: Uint8Array | undefined;
        powerFlags?: (string[] & string[] & Record<Exclude<keyof I["powerFlags"], keyof string[]>, never>) | undefined;
        submitter?: Uint8Array | undefined;
    } & Record<Exclude<keyof I, keyof MsgProvision>, never>>(object: I): MsgProvision;
};
export declare const MsgProvisionResponse: {
    encode(_: MsgProvisionResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgProvisionResponse;
    fromJSON(_: any): MsgProvisionResponse;
    toJSON(_: MsgProvisionResponse): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): MsgProvisionResponse;
};
export declare const MsgInstallBundle: {
    encode(message: MsgInstallBundle, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgInstallBundle;
    fromJSON(object: any): MsgInstallBundle;
    toJSON(message: MsgInstallBundle): unknown;
    fromPartial<I extends {
        bundle?: string | undefined;
        submitter?: Uint8Array | undefined;
        compressedBundle?: Uint8Array | undefined;
        uncompressedSize?: string | undefined;
    } & {
        bundle?: string | undefined;
        submitter?: Uint8Array | undefined;
        compressedBundle?: Uint8Array | undefined;
        uncompressedSize?: string | undefined;
    } & Record<Exclude<keyof I, keyof MsgInstallBundle>, never>>(object: I): MsgInstallBundle;
};
export declare const MsgInstallBundleResponse: {
    encode(_: MsgInstallBundleResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgInstallBundleResponse;
    fromJSON(_: any): MsgInstallBundleResponse;
    toJSON(_: MsgInstallBundleResponse): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): MsgInstallBundleResponse;
};
/** Transactions. */
export interface Msg {
    /** Install a JavaScript sources bundle on the chain's SwingSet controller. */
    InstallBundle(request: MsgInstallBundle): Promise<MsgInstallBundleResponse>;
    /** Send inbound messages. */
    DeliverInbound(request: MsgDeliverInbound): Promise<MsgDeliverInboundResponse>;
    /** Perform a low-privilege wallet action. */
    WalletAction(request: MsgWalletAction): Promise<MsgWalletActionResponse>;
    /** Perform a wallet action that spends assets. */
    WalletSpendAction(request: MsgWalletSpendAction): Promise<MsgWalletSpendActionResponse>;
    /** Provision a new endpoint. */
    Provision(request: MsgProvision): Promise<MsgProvisionResponse>;
}
type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
export type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
type KeysOfUnion<T> = T extends T ? keyof T : never;
export type Exact<P, I extends P> = P extends Builtin ? P : P & {
    [K in keyof P]: Exact<P[K], I[K]>;
} & Record<Exclude<keyof I, KeysOfUnion<P>>, never>;
export {};
