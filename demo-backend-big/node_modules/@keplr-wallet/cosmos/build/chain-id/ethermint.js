"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EthermintChainIdHelper = void 0;
const cosmos_1 = require("./cosmos");
class EthermintChainIdHelper {
    static parse(chainId) {
        const cosmosChainId = cosmos_1.ChainIdHelper.parse(chainId);
        if (chainId === "carbon-1") {
            return Object.assign({ ethChainId: 9790 }, cosmosChainId);
        }
        if (chainId.startsWith("injective")) {
            const injectiveTestnetChainIds = ["injective-777", "injective-888"];
            if (injectiveTestnetChainIds.includes(chainId)) {
                return Object.assign({ ethChainId: 5 }, cosmosChainId);
            }
            return Object.assign({ ethChainId: 1 }, cosmosChainId);
        }
        const matches = chainId.match("^([a-z]{1,})_{1}([1-9][0-9]*)-{1}([1-9][0-9]*)$");
        if (!matches ||
            matches.length !== 4 ||
            matches[1] === "" ||
            Number.isNaN(parseFloat(matches[2])) ||
            !Number.isInteger(parseFloat(matches[2]))) {
            throw new Error(`Invalid chainId for ethermint: ${chainId}`);
        }
        return Object.assign(Object.assign({}, cosmosChainId), { ethChainId: parseFloat(matches[2]) });
    }
}
exports.EthermintChainIdHelper = EthermintChainIdHelper;
//# sourceMappingURL=ethermint.js.map