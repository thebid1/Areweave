export const fiatCurrencyTypes = [
    'usd',
    'eur',
    'gbp',
    'cad',
    'aud',
    'jpy',
    'inr',
    'sgd',
    'hkd',
    'brl',
];
export function isCurrency(currency) {
    return fiatCurrencyTypes.includes(currency);
}
export const tokenTypes = [
    'arweave',
    'solana',
    'ethereum',
    'kyve',
    'matic',
    'pol',
];
export const isNodeUploadFolderParams = (p) => p.folderPath !== undefined;
export const isWebUploadFolderParams = (p) => p.files !== undefined;
export function isKyvePrivateKey(wallet) {
    if (typeof wallet !== 'string')
        return false;
    // TODO: Hexadecimal regex
    return true;
}
export function isEthPrivateKey(wallet) {
    if (typeof wallet !== 'string')
        return false;
    return wallet.startsWith('0x');
}
export const isJWK = (wallet) => wallet.kty !== undefined;
export function isSolanaWalletAdapter(walletAdapter) {
    return 'publicKey' in walletAdapter && 'signMessage' in walletAdapter;
}
export function isEthereumWalletAdapter(walletAdapter) {
    return 'getSigner' in walletAdapter;
}
