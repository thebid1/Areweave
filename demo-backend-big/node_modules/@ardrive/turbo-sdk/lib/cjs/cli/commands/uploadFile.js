"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.uploadFile = uploadFile;
/**
 * Copyright (C) 2022-2024 Permanent Data Solutions, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
const fs_1 = require("fs");
const constants_js_1 = require("../constants.js");
const utils_js_1 = require("../utils.js");
async function uploadFile(options) {
    const { filePath } = options;
    if (filePath === undefined) {
        throw new Error('Must provide a --file-path to upload');
    }
    const turbo = await (0, utils_js_1.turboFromOptions)(options);
    const paidBy = await (0, utils_js_1.paidByFromOptions)(options, turbo);
    const fileSize = (0, fs_1.statSync)(filePath).size;
    const result = await turbo.uploadFile({
        fileStreamFactory: () => (0, fs_1.createReadStream)(filePath),
        fileSizeFactory: () => fileSize,
        dataItemOpts: { tags: [...constants_js_1.turboCliTags], paidBy }, // TODO: Inject user tags
    });
    console.log('Uploaded file:', JSON.stringify(result, null, 2));
}
