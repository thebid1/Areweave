"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.tokenToBaseMap = exports.exponentMap = exports.defaultTokenMap = void 0;
exports.isTokenType = isTokenType;
const types_js_1 = require("../../types.js");
const arweave_js_1 = require("./arweave.js");
const ethereum_js_1 = require("./ethereum.js");
const kyve_js_1 = require("./kyve.js");
const polygon_js_1 = require("./polygon.js");
const solana_js_1 = require("./solana.js");
exports.defaultTokenMap = {
    arweave: (config) => new arweave_js_1.ArweaveToken(config),
    solana: (config) => new solana_js_1.SolanaToken(config),
    ethereum: (config) => new ethereum_js_1.EthereumToken(config),
    kyve: (config) => new kyve_js_1.KyveToken(config),
    matic: (config) => new polygon_js_1.PolygonToken(config),
    pol: (config) => new polygon_js_1.PolygonToken(config),
};
exports.exponentMap = {
    arweave: 12,
    solana: 9,
    ethereum: 18,
    kyve: 6,
    matic: 18,
    pol: 18,
};
exports.tokenToBaseMap = {
    arweave: (a) => (0, arweave_js_1.ARToTokenAmount)(a),
    solana: (a) => (0, solana_js_1.SOLToTokenAmount)(a),
    ethereum: (a) => (0, ethereum_js_1.ETHToTokenAmount)(a),
    kyve: (a) => (0, kyve_js_1.KYVEToTokenAmount)(a),
    matic: (a) => (0, polygon_js_1.POLToTokenAmount)(a),
    pol: (a) => (0, polygon_js_1.POLToTokenAmount)(a),
};
function isTokenType(token) {
    return types_js_1.tokenTypes.includes(token);
}
__exportStar(require("./arweave.js"), exports);
__exportStar(require("./solana.js"), exports);
__exportStar(require("./ethereum.js"), exports);
__exportStar(require("./kyve.js"), exports);
