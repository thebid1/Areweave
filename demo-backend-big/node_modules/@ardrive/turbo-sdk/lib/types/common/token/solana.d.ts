/**
 * Copyright (C) 2022-2024 Permanent Data Solutions, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Connection } from '@solana/web3.js';
import { BigNumber } from 'bignumber.js';
import { TokenConfig, TokenCreateTxParams, TokenPollingOptions, TokenTools, TurboLogger } from '../../types.js';
export declare const lamportToTokenAmount: (winston: BigNumber.Value) => BigNumber.Value;
export declare const SOLToTokenAmount: (sol: BigNumber.Value) => string;
export declare class SolanaToken implements TokenTools {
    protected logger: TurboLogger;
    protected connection: Connection;
    protected gatewayUrl: string;
    protected pollingOptions: TokenPollingOptions;
    constructor({ logger, gatewayUrl, pollingOptions, }?: TokenConfig);
    createAndSubmitTx({ target, tokenAmount, signer, }: TokenCreateTxParams): Promise<{
        id: string;
        target: string;
    }>;
    private submitTx;
    pollForTxBeingAvailable({ txId, }: {
        txId: string;
    }): Promise<void>;
}
//# sourceMappingURL=solana.d.ts.map