"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var stargate_1 = require("@cosmjs/stargate");
var bignumber_js_1 = __importDefault(require("bignumber.js"));
var signing_1 = require("../../../signing");
var KyveBaseMsg = /** @class */ (function (_super) {
    __extends(KyveBaseMsg, _super);
    function KyveBaseMsg() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    KyveBaseMsg.prototype.transfer = function (recipient, amount, options) {
        var _this = this;
        var tx = {
            typeUrl: "/cosmos.bank.v1beta1.MsgSend",
            value: {
                fromAddress: this.account.address,
                toAddress: recipient,
                amount: (0, stargate_1.coins)(amount, this.config.coinDenom),
            },
        };
        return new signing_1.PendingTx({ tx: [tx] }, function () {
            return _this.getPendingSignedTx(tx, options);
        });
    };
    KyveBaseMsg.prototype.multiTransfer = function (recipient, amount, options) {
        var _this = this;
        var allAmount = new bignumber_js_1.default(amount).multipliedBy(recipient.length);
        var tx = {
            typeUrl: "/cosmos.bank.v1beta1.MsgMultiSend",
            value: {
                inputs: [
                    {
                        address: this.account.address,
                        coins: (0, stargate_1.coins)(allAmount.toString(), this.config.coinDenom),
                    },
                ],
                outputs: recipient.map(function (address) { return ({
                    address: address,
                    coins: (0, stargate_1.coins)(amount, _this.config.coinDenom),
                }); }),
            },
        };
        return new signing_1.PendingTx({ tx: [tx] }, function () {
            return _this.getPendingSignedTx(tx, options);
        });
    };
    KyveBaseMsg.prototype.txsAll = function (txs, options) {
        var _this = this;
        var txMessages = txs.map(function (tx) { return tx.tx; }).flat();
        return new signing_1.PendingTx({ tx: txMessages }, function () {
            return _this.getPendingSignedTx(txMessages, options);
        });
    };
    return KyveBaseMsg;
}(signing_1.KyveSigning));
exports.default = KyveBaseMsg;
//# sourceMappingURL=base.js.map